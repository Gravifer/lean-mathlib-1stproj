{
  "inventory": [
    "rfl",
    "[anonymous]",
    "nth_rewrite",
    "repeat",
    "rw",
    "MyNat.four_eq_succ_three",
    "MyNat.one_eq_succ_zero",
    "MyNat.three_eq_succ_two",
    "MyNat.two_eq_succ_one",
    "MyNat",
    "MyNat.add_zero",
    "Add",
    "MyNat.add_succ",
    "MyNat.succ_eq_add_one",
    "induction",
    "MyNat.zero_add",
    "MyNat.succ_add",
    "MyNat.add_comm",
    "MyNat.add_assoc",
    "MyNat.add_right_comm",
    "MyNat.mul_succ",
    "MyNat.mul_zero",
    "Mul",
    "MyNat.mul_one",
    "MyNat.zero_mul",
    "MyNat.succ_mul",
    "MyNat.mul_comm",
    "MyNat.one_mul",
    "MyNat.two_mul",
    "MyNat.mul_add",
    "MyNat.add_mul",
    "MyNat.mul_assoc",
    "MyNat.pow_zero",
    "Pow",
    "MyNat.zero_pow_zero",
    "MyNat.pow_succ",
    "MyNat.zero_pow_succ",
    "MyNat.pow_one",
    "MyNat.one_pow",
    "MyNat.pow_two",
    "MyNat.pow_add",
    "MyNat.mul_pow",
    "MyNat.pow_pow",
    "MyNat.add_sq",
    "exact",
    "apply",
    "MyNat.succ_inj",
    "intro",
    "Ne",
    "MyNat.zero_ne_succ",
    "MyNat.zero_ne_one",
    "symm",
    "MyNat.one_ne_zero",
    "MyNat.add_left_comm",
    "simp",
    "simp_add",
    "MyNat.pred_succ",
    "trivial",
    "MyNat.is_zero_succ",
    "MyNat.is_zero_zero",
    "MyNat.succ_ne_zero",
    "contrapose",
    "MyNat.succ_ne_succ",
    "decide",
    "MyNat.add_right_cancel",
    "MyNat.add_left_cancel",
    "MyNat.add_left_eq_self",
    "MyNat.add_right_eq_self",
    "cases",
    "MyNat.add_right_eq_zero",
    "MyNat.add_left_eq_zero",
    "use",
    "LE",
    "MyNat.le_refl",
    "MyNat.zero_le",
    "MyNat.le_succ_self",
    "MyNat.le_trans",
    "MyNat.le_zero",
    "MyNat.le_antisymm",
    "left",
    "right",
    "MyNat.le_total",
    "MyNat.succ_le_succ",
    "MyNat.le_one",
    "MyNat.le_two",
    "MyNat.mul_le_mul_right",
    "MyNat.mul_left_ne_zero",
    "tauto",
    "MyNat.eq_succ_of_ne_zero",
    "MyNat.one_le_of_ne_zero",
    "MyNat.le_mul_right",
    "have",
    "MyNat.mul_right_eq_one",
    "MyNat.mul_ne_zero",
    "MyNat.mul_eq_zero",
    "MyNat.mul_left_cancel",
    "MyNat.mul_right_eq_self"
  ],
  "openedIntro": true,
  "data": {
    "Tutorial": {
      "1": {
        "code": "rfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "rw [h]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "rw [two_eq_succ_one]\r\nrw [one_eq_succ_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "rw [<- one_eq_succ_zero]\r\nrw [two_eq_succ_one]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [add_zero]\r\nrw [add_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "rw [add_zero c]\r\nrepeat rw [add_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "rw [one_eq_succ_zero]\r\nrw [add_succ]\r\nrw [add_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "repeat rw [four_eq_succ_three, three_eq_succ_two]\r\nrepeat rw [<-add_succ]\r\nnth_rewrite 2 [two_eq_succ_one]\r\nrw [  add_succ]\r\nrw [one_eq_succ_zero]\r\nrw [ add_succ]\r\nrw [ add_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 9,
            "selectionStartColumn": 1,
            "positionLineNumber": 9,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "Addition": {
      "1": {
        "code": "induction n with d hd\r\n(rw [add_zero] ; rfl)\r\nrw [add_succ]\r\nrw [hd]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 4,
            "positionLineNumber": 5,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "2": {
        "code": "induction b with b' hb\r\nrepeat rw [add_zero]\r\nrfl\r\nrw [add_succ]\r\nrw [add_succ]\r\nrw [hb]\r\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 4,
            "positionLineNumber": 7,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "3": {
        "code": "induction a with a' ha\r\nrw [add_zero, zero_add]\r\nrfl\r\nrw [add_succ, succ_add]\r\nrw [ha]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "induction c with c' hc\r\nrepeat rw [add_zero]\r\nrfl\r\nrepeat rw [add_succ]\r\nrw [hc]\r\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 4,
            "positionLineNumber": 6,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [add_assoc a b c]\r\nrw [add_comm b]\r\nrw [add_assoc a c b]\r\nrfl",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 4,
            "positionLineNumber": 4,
            "positionColumn": 4
          }
        ],
        "help": []
      }
    },
    "Multiplication": {
      "1": {
        "code": "rw [one_eq_succ_zero]\r\nrw [mul_succ]\r\nrw [mul_zero]\r\nrw [zero_add]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "induction m with m' hm\r\nrw [mul_zero]\r\nrfl\r\nrw [mul_succ]\r\nrw [add_zero, hm]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "induction b with b' hb\r\nrepeat rw [add_zero]\r\nrepeat rw [mul_zero]\r\nrfl\r\nrepeat rw [mul_succ]\r\nrw [succ_eq_add_one b']\r\nrw [add_assoc]\r\nrw [add_comm a]\r\nrw [add_assoc]\r\nrw [add_comm 1]\r\nrw [<- succ_eq_add_one]\r\nrw [<- add_assoc]\r\nrw [hb]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 15,
            "selectionStartColumn": 1,
            "positionLineNumber": 15,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "induction b with b' hb\r\nrw [zero_mul, mul_zero]\r\nrfl\r\nrw [succ_mul, mul_succ]\r\nrw [hb]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [mul_comm]\r\nrw [mul_one]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "rw [two_eq_succ_one, succ_mul, one_mul]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 4,
            "positionLineNumber": 2,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "7": {
        "code": "induction a with a' ha\r\nrepeat rw [zero_mul]\r\nrw [add_zero]\r\nrfl\r\nrepeat rw [succ_mul]\r\nrw [add_assoc]\r\nnth_rewrite 3 [add_comm b]\r\nnth_rewrite 2 [<-add_assoc]\r\nnth_rewrite 2 [<-add_assoc]\r\nrw [<-ha]\r\nrw [add_assoc]\r\nrw [add_comm c b]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 14,
            "selectionStartColumn": 1,
            "positionLineNumber": 14,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "rw [mul_comm]\r\nrw [mul_add]\r\nrw [mul_comm c, mul_comm c]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "repeat rw [mul_comm a]\r\ninduction b with b' hb\r\nrepeat rw [zero_mul]\r\nrfl\r\nrepeat rw [succ_mul]\r\nrepeat rw [add_mul]\r\nrw [mul_comm c, <-hb]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 9,
            "selectionStartColumn": 1,
            "positionLineNumber": 9,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "Power": {
      "1": {
        "code": "rw [pow_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "induction m with m' hm\r\nrw [pow_succ, mul_zero]\r\nrfl\r\nrw [pow_succ, mul_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "rw [one_eq_succ_zero, pow_succ, pow_zero, one_mul]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "induction m with m' hm\r\nrw [pow_zero]\r\nrfl\r\nrw [pow_succ, mul_one, hm]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [two_eq_succ_one, pow_succ, pow_one]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 4,
            "positionLineNumber": 2,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "6": {
        "code": "induction n with n' hn\r\nrw [add_zero, pow_zero, mul_one]\r\nrfl\r\nrw [add_succ]\r\nrepeat rw [pow_succ]\r\nrw [<-mul_assoc, hn]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "induction n with n' hn\r\nrepeat rw [pow_zero]\r\nrw [mul_one]\r\nrfl\r\nrepeat rw [pow_succ]\r\nrw [mul_assoc, mul_comm a (b ^ n' * b), mul_assoc, <-mul_assoc (a ^ n'), mul_comm b a, hn]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "induction n with n' hn\r\nrw [pow_zero, mul_zero, pow_zero]\r\nrfl\r\nrw [pow_succ, mul_succ, pow_add, hn]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "rw [pow_two]\r\nrepeat rw [mul_add]\r\nrepeat rw [add_mul]\r\nrepeat rw [<-pow_two]\r\nrw [mul_comm b a, add_comm (a * b), add_right_comm (a ^ 2)]\r\nrepeat rw [<-add_assoc]\r\nrw [add_assoc (a ^ 2 + b ^ 2), mul_assoc 2, <-two_mul]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 9,
            "selectionStartColumn": 1,
            "positionLineNumber": 9,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "10": {
        "code": "",
        "completed": false,
        "selections": [],
        "help": []
      }
    },
    "Implication": {
      "1": {
        "code": "exact h1\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "repeat rw [zero_add] at h\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "apply h2 at h1\r\nexact h1\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "rw [<-succ_eq_add_one, four_eq_succ_three] at h\r\napply succ_inj at h\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "apply succ_inj\r\nrw [succ_eq_add_one, <-four_eq_succ_three]\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "intro h\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "repeat rw [<-succ_eq_add_one]\r\napply succ_inj\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "apply h2 at h1\r\nexact h1\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "intro h\r\nrw [one_eq_succ_zero] at h\r\napply zero_ne_succ at h\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "10": {
        "code": "symm\r\nexact zero_ne_one\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "11": {
        "code": "intro h\r\nrepeat rw [add_succ] at h\r\nrw [add_zero] at h\r\nrepeat apply succ_inj at h\r\napply zero_ne_succ at h\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "Algorithm": {
      "1": {
        "code": "repeat rw [add_comm b]\r\nrw [<-add_assoc a c b]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "repeat rw [add_assoc]\r\nrw [add_left_comm b c]\r\nrw [add_comm d]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "simp only [add_assoc, add_left_comm, add_comm]\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "simp_add\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "rw [<-pred_succ a]\r\nrw [h]\r\napply pred_succ\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "intro h\r\nrw [<- is_zero_succ a]\r\nrw [h]\r\nrw [is_zero_zero]\r\ntrivial\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "contrapose! h\r\napply succ_inj at h\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "decide\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "decide\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "AdvAddition": {
      "1": {
        "code": "induction n with n' hn\r\nsimp\r\nrepeat rw [succ_eq_add_one]\r\nintro lhs\r\nrepeat rw [<-add_assoc] at lhs\r\nrepeat rw [<-succ_eq_add_one] at lhs\r\nrepeat apply succ_inj at lhs\r\napply hn at lhs\r\nexact lhs\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 10,
            "selectionStartColumn": 1,
            "positionLineNumber": 10,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "intro lhs\r\nrepeat rw [add_comm n] at lhs\r\napply add_right_cancel at lhs\r\nexact lhs\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "nth_rewrite 2 [<-zero_add y]\r\napply add_right_cancel\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "rw [add_comm x y]\r\napply add_left_eq_self\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "cases b with b'\r\nsimp\r\nrw [add_succ]\r\nintro lhs\r\napply succ_ne_zero at lhs\r\ncases lhs\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 7,
            "selectionStartColumn": 1,
            "positionLineNumber": 7,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "rw [add_comm a]\r\napply add_right_eq_zero\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "LessOrEqual": {
      "1": {
        "code": "use 0\r\nsimp\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "2": {
        "code": "use x\r\nsimp\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "use 1\r\napply succ_eq_add_one\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "cases hxy with x' hx\r\ncases hyz with y' hy\r\nuse (x' + y')\r\nrw [hy, hx]\r\nsimp_add\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "cases hx with x' hx'\r\nsymm at hx'\r\napply add_right_eq_zero at hx'\r\nexact hx'\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "cases hxy with dxy hxy'\r\ncases hyx with dyx hyx'\r\nrw [hxy'] at hyx'\r\nnth_rewrite 1 [<-add_zero x] at hyx'\r\nrw [add_assoc x dxy] at hyx'\r\napply add_left_cancel at hyx'\r\nsymm at hyx'\r\napply add_right_eq_zero at hyx'\r\nrw [hxy', hyx']\r\nsimp\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 11,
            "selectionStartColumn": 1,
            "positionLineNumber": 11,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "7": {
        "code": "cases h with hx hy\r\nright\r\nexact hx\r\nleft\r\nexact hy\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "induction y with d hd\r\n(right; apply zero_le)\r\ncases hd with h1 h2\r\nleft\r\napply le_trans x d (succ d)\r\nexact h1\r\napply le_succ_self\r\ncases h2 with e he\r\ncases e with a\r\nrw [add_zero] at he\r\nleft\r\nrw [he]\r\napply le_succ_self\r\nright\r\nrw [add_succ, <-succ_add] at he\r\nrw [he]\r\nuse a\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 19,
            "selectionStartColumn": 1,
            "positionLineNumber": 19,
            "positionColumn": 1
          }
        ],
        "help": [
          0,
          2,
          7,
          8
        ]
      },
      "9": {
        "code": "cases hx\r\nrw [succ_add] at h\r\napply succ_inj at h\r\nuse w\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "10": {
        "code": "(cases x with x; simp)\r\nrw [one_eq_succ_zero] at hx ⊢\r\napply succ_le_succ at hx\r\napply le_zero at hx\r\n(right; rw [hx]; simp)\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 1,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "11": {
        "code": "(cases x with x; simp; repeat rw [two_eq_succ_one, one_eq_succ_zero] at hx ⊢)\r\n(apply succ_le_succ at hx; rw [<-one_eq_succ_zero] at hx; apply le_one at hx)\r\ncases hx with h0 h1\r\n(right; left; rw [h0]; simp)\r\n(right; right; rw [h1]; decide)\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    },
    "AdvMultiplication": {
      "1": {
        "code": "-- induction t with t' ht\r\n-- (decide; apply zero_le)\r\n-- (  repeat rw [succ_eq_add_one]; repeat rw [mul_add]; repeat rw [mul_one])\r\n-- (cases h with d h'; cases ht with dt ht'; use (d + dt))\r\n-- (rw [ht', h']; simp_add)\r\ncases h with d hd\r\nuse d * t\r\nrw [hd, add_mul]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 9,
            "selectionStartColumn": 4,
            "positionLineNumber": 9,
            "positionColumn": 4
          }
        ],
        "help": []
      },
      "2": {
        "code": "contrapose! h\r\nrw [h, mul_zero]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 4,
            "selectionStartColumn": 1,
            "positionLineNumber": 4,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "3": {
        "code": "cases a with a'\r\ntauto\r\nuse a'\r\ntauto\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 5,
            "selectionStartColumn": 1,
            "positionLineNumber": 5,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "4": {
        "code": "apply eq_succ_of_ne_zero at ha\r\ncases a with a'\r\ntauto\r\nrw [one_eq_succ_zero]\r\nuse a'\r\nrw [<-one_eq_succ_zero, succ_eq_add_one, add_comm]\r\nrfl\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 8,
            "selectionStartColumn": 1,
            "positionLineNumber": 8,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "5": {
        "code": "apply mul_left_ne_zero at h\r\napply one_le_of_ne_zero at h\r\napply (mul_le_mul_right · · a) at h\r\nrw [one_mul, mul_comm b] at h\r\nexact h\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "6": {
        "code": "have h2 : x * y ≠ 0\r\n(rw [h]; tauto)\r\napply le_mul_right at h2\r\nrw [h] at h2\r\napply le_one at h2\r\ncases h2 with h0 h1\r\ncases h0\r\nrw [zero_mul] at h\r\nexact h\r\nexact h1\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 11,
            "selectionStartColumn": 1,
            "positionLineNumber": 11,
            "positionColumn": 1
          }
        ],
        "help": [
          5
        ]
      },
      "7": {
        "code": "(apply eq_succ_of_ne_zero at ha; apply eq_succ_of_ne_zero at hb; cases ha with a' ha; cases hb with b' hb)\r\nrw[ha, hb]\r\nsymm\r\nrw [succ_mul, mul_succ,add_succ]\r\napply zero_ne_succ\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 6,
            "selectionStartColumn": 1,
            "positionLineNumber": 6,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "8": {
        "code": "have h := mul_ne_zero a b\r\ntauto\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 3,
            "selectionStartColumn": 1,
            "positionLineNumber": 3,
            "positionColumn": 1
          }
        ],
        "help": []
      },
      "9": {
        "code": "induction b with d hd generalizing c\r\n(symm at h ⊢; rw [mul_zero] at h; apply mul_eq_zero at h)\r\n(cases h; repeat tauto)\r\ncases c with e\r\n(rw [mul_zero] at h; apply mul_eq_zero at h; cases h; repeat tauto)\r\nhave hde : (a * succ d = a * succ e -> a * d = a * e)\r\nrepeat rw [succ_eq_add_one, mul_add]\r\nintro\r\napply add_right_cancel at a_1\r\nexact a_1\r\napply hde at h\r\napply hd at h\r\n(rw [h]; simp)\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 14,
            "selectionStartColumn": 1,
            "positionLineNumber": 14,
            "positionColumn": 1
          }
        ],
        "help": [
          1,
          3
        ]
      },
      "10": {
        "code": "(nth_rewrite 2 [<-mul_one a] at h; apply mul_left_cancel at h; exact h; exact ha)\r\n",
        "completed": true,
        "selections": [
          {
            "selectionStartLineNumber": 2,
            "selectionStartColumn": 1,
            "positionLineNumber": 2,
            "positionColumn": 1
          }
        ],
        "help": []
      }
    }
  },
  "difficulty": 2,
  "typewriterMode": false
}